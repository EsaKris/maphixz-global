# Generated by Django 5.2.1 on 2025-06-26 12:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("store", "0004_order_is_payment_confirmed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="products/images/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("is_featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-is_featured", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductSpecification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("value", models.CharField(max_length=200)),
                ("icon", models.CharField(blank=True, max_length=50)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RepairService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("hardware", "Hardware Repair"),
                            ("software", "Software Issue"),
                            ("upgrade", "Upgrade Service"),
                            ("diagnostic", "Diagnostic"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Requested"),
                            ("diagnosed", "Diagnosed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="requested",
                        max_length=20,
                    ),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "actual_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("estimated_completion", models.DateField(blank=True, null=True)),
                ("completed_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WarrantyRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registration_date", models.DateTimeField(auto_now_add=True)),
                ("expiry_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("void", "Void"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "Warranty Registrations",
                "ordering": ["-registration_date"],
            },
        ),
        migrations.AddField(
            model_name="category",
            name="category_type",
            field=models.CharField(
                choices=[
                    ("laptop", "Laptop"),
                    ("accessory", "Accessory"),
                    ("part", "Component/Part"),
                    ("service", "Repair Service"),
                ],
                default="laptop",
                help_text="Type of products in this category",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="icon",
            field=models.CharField(
                choices=[
                    ("laptop", "fa-laptop"),
                    ("desktop", "fa-desktop"),
                    ("mobile", "fa-mobile-alt"),
                    ("cpu", "fa-microchip"),
                    ("ram", "fa-memory"),
                    ("storage", "fa-hdd"),
                    ("repair", "fa-tools"),
                    ("accessory", "fa-keyboard"),
                ],
                default="laptop",
                help_text="Icon to represent this category",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="image",
            field=models.ImageField(
                blank=True,
                help_text="Category banner image",
                null=True,
                upload_to="categories/",
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="is_featured",
            field=models.BooleanField(
                default=False, help_text="Featured categories appear on homepage"
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="category",
            name="warranty_months",
            field=models.PositiveIntegerField(
                default=12,
                help_text="Default warranty period for products in this category (months)",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="customer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="delivery_country",
            field=models.CharField(default="Nigeria", max_length=100),
        ),
        migrations.AddField(
            model_name="order",
            name="delivery_postal_code",
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name="order",
            name="delivery_state",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="order",
            name="discount_amount",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name="order",
            name="payment_confirmation_date",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="order",
            name="shipping_cost",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name="order",
            name="subtotal",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="order",
            name="tax_amount",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name="orderitem",
            name="warranty_months",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="product",
            name="brand",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="product",
            name="color",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name="product",
            name="dimensions",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="product",
            name="discount_price",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=10, null=True
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="display",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="product",
            name="graphics",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="product",
            name="is_new",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="product",
            name="is_refurbished",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="product",
            name="operating_system",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="product",
            name="processor",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="product",
            name="ram",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name="product",
            name="stock_quantity",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="product",
            name="storage",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="product",
            name="warranty",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Warranty period in months (uses category default if empty)",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="weight",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name="order",
            name="payment_method",
            field=models.CharField(
                choices=[
                    ("online", "Online Payment"),
                    ("whatsapp", "WhatsApp Payment"),
                    ("bank_transfer", "Bank Transfer"),
                    ("cash", "Cash on Delivery"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="orderitem",
            unique_together={("order", "product")},
        ),
        migrations.AddIndex(
            model_name="cartitem",
            index=models.Index(
                fields=["product"], name="store_carti_product_1c3469_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["category_type"], name="store_categ_categor_3d472b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["is_featured"], name="store_categ_is_feat_10990e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(fields=["status"], name="store_order_status_428b25_idx"),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["customer_email"], name="store_order_custome_97b3a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["created_at"], name="store_order_created_4ba192_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["brand"], name="store_produ_brand_aa2434_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_refurbished"], name="store_produ_is_refu_a26916_idx"
            ),
        ),
        migrations.AddField(
            model_name="productimage",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="store.product",
            ),
        ),
        migrations.AddField(
            model_name="productspecification",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="specifications",
                to="store.product",
            ),
        ),
        migrations.AddField(
            model_name="repairservice",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="repairservice",
            name="product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="store.product",
            ),
        ),
        migrations.AddField(
            model_name="warrantyregistration",
            name="order_item",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="warranty",
                to="store.orderitem",
            ),
        ),
    ]
